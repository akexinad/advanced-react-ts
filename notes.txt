WHAT IS REACT
=============

React is basically is JS library for building User Interfaces.



============================================
============================================



COMPONENT LIFECYCLES FOR CREATION
=================================

NOTE: Lifecycle hooks have nothing to do with React hooks.

Below is a list of the class lifecycle hooks in execution order.


CONSTRUCTOR
===========

The first to invoke.

If you create your own constructor where you have to create your own logic then you have to call super(props).

DO NOT CAUSE SIDE EFFECTS. Example. Do not make HTTP requests or store data in local storage.


GET DERIVED STATE FROM PROPS
============================

Whenever your props change, you can sync your state to the changes.

This will be used very very rarely.

AGAIN, DO NOT CAUSE SIDE EFFECTS.


RENDER
======

We all know this one.

This is where you prepare and structure your JSX code.


RENDER CHILD COMPONENTS
=======================

All the components declared in the render() function above will then be invoked.


COMPONENT DID MOUNT
===================

This is a very important hook.

HERE YOU CAUSE SIDE-EFFECTS (Http requests).

You should not call setState in this hook UNLESS it is done within the .then block of a promise.



============================================
============================================



COMPONENT LIFECYCLES FOR UPDATES ON PROPS
=========================================

GET DERIVED STATE FROM PROPS
============================

You would use this to initialize the state of a component based on updated props you are getting from another component.

This is very rarely used as there are more elegant ways of updating the state of lower order components.

NO SIDE EFFECTS ALLOWED.


SHOULD COMPONENT UPDATE
=======================

This gives you the option to cancel the updating process and optimize app performance.

NO SIDE EFFECTS


RENDER
======

Yes this one.


UPDATE CHILD COMPONENT PROPS
============================

Repeat the above process for child components


GET SNAPSHOT BEFORE UPDATE
==========================

This is a niche lifecycle method for last minute DOM checks such as getting the last scroll position of the user.


COMPONENT DID UPDATE
====================

This signals that all other lifecycle methods have been executed.

NOW YOU CAN CAUSE SIDE-EFFECTS. And update state. Make sure you do not fall in to an infinite loop where the change in state calls this lifecycle method again.


============================================
============================================


REACT HOOKS
===========

useEffect()
===========

Is invoked every render.

The second argument of useEffect (the array) is used to decide when you want the hook to execute. You can variables that you want the hook to watch out for, and when those variables change, the hook will execute.

To make sure that the hook only executes once, just pass in an empty array. It works such that since there are no dependencies to look out for, useEffect wont rerun as there is no dependency telling it when in has to rerun.


=============================
=============================

PURE COMPONENTS
===============

A pure component can be used if you find yourself in a situation where you are using shouldComponentUpdate() for all possible changes to a components properties[props].